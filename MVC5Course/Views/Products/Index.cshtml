@model IEnumerable<MVC5Course.Models.Product>

@{
    ViewBag.Title = "Index";
}
@*@section breadcrumb{
        <li><a href="#">產品清單</a></li>
    }*@
<h2>產品清單</h2>

@*最簡單的做法就是用Form包起來*@
@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <p>
        @Html.ActionLink("Create New", "Create")
        @*"--請選擇--  是ddl的預設值 (OptionLabel)"*@

        @Html.DropDownList("IsActive",null, "--請選擇--", new { onchange = "this.form.submit();"})
        @Html.TextBox("keyword", null, new { onchange = "this.form.submit();" })
    </p>
}

@if (!string.IsNullOrEmpty(Convert.ToString(TempData["EditMessage"])))
{
    <h3>@TempData["EditMessage"]</h3>
    //資料送出後，如果Reload後，文字就消失了
}

@using (Html.BeginForm())
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Active)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>

        @{
            var data = Model.ToArray();
        }

        @for (int i = 0; i < data.Length; i++)
        {

            @Html.HiddenFor(modelItem => data[i].ProductId)
            if (ViewBag.SelectedProductID != null & ViewBag.SelectedProductID == data[i].ProductId)
            {
                ViewBag.SelectedProductItem = data[i];
            }
            <tr @if (ViewBag.SelectedProductId != null && ViewBag.SelectedProductId == data[i].ProductId) { @Html.Raw("style='background-color: lightyellow;'")  }>
                <td>
                    @Html.DisplayFor(modelItem => data[i].ProductName)
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].Price)
                    @Html.ValidationMessageFor(modelItem => data[i].Price)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => data[i].Active)
                    </td>*@
                <td>
                    @Html.EditorFor(modelItem => data[i].Stock)
                    @Html.ValidationMessageFor(modelItem => data[i].Stock)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = data[i].ProductId }) |
                    @Html.ActionLink("Details", "Details", new { type = "Details", PID = data[i].ProductId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = data[i].ProductId }) |
                    @Html.ActionLink("OrderLines", "index", new { type = "OrderLines", PID = data[i].ProductId })

                </td>
            </tr>
        }
    </table>
    <button class="btn btn-primary">批次更新</button>
    <hr>

            if (ViewBag.SelectedProductID != null)
            {
                if (ViewBag.type = "Details")
                {
                    if (ViewData["SelectedProductItem"] != null)
                    {
                        @Html.Action("Details", "Product", ViewData["SelectedProductItem"])
                    }

                }
                else
                {
                    @Html.Action("Index", "OrderLines", new { ProductID = ViewBag.SelectedProductID })
                    }
                }
            }
@*
    @foreach (var item in Model)
    {
        @Html.Hidden()
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.EditFor(modelItem => item.Price)
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.Active)
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ProductId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ProductId })
            </td>
        </tr>
    }*@


